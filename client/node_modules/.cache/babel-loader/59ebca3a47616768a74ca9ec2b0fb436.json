{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/YelpSearch.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Button, Container, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport './App.css';\nimport axios from 'axios';\nimport LocationSearchInput from './LocationSearchInput';\nimport BusinessCard from './BusinessCard';\nimport SearchForm from './SearchForm';\nimport PlacesAutocomplete from 'react-places-autocomplete';\n\nclass YelpSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      aliases: [],\n      categoryObjects: [],\n      address: '',\n      businesses: [],\n      businessesFound: -1,\n      users: [],\n      usersFound: -1\n    };\n    this.areaChange = this.areaChange.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('/categories/f').then(response => {\n      console.log(response);\n      let categoryMap = response.data[\"categoryMap\"][0];\n      this.setState({\n        categories: response.data[\"categories\"],\n        aliases: response.data[\"aliases\"],\n        categoryObjects: categoryMap\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  areaChange(evt) {\n    this.setState({\n      address: evt.target.value\n    });\n  }\n\n  renderBusinesses() {\n    if (this.state.businessesFound < 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, \"Press Search\");\n    }\n\n    if (this.state.businessesFound === 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, \"Nothing...\");\n    }\n\n    const bizEle = this.state.businesses.map(biz => /*#__PURE__*/React.createElement(\"li\", {\n      key: biz.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 4\n      }\n    }, biz.name));\n    const businessCardEle = this.state.businesses.map(biz => /*#__PURE__*/React.createElement(BusinessCard, {\n      business: biz,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }\n    }, businessCardEle);\n  }\n\n  renderUsers() {\n    if (this.state.usersFound < 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, \"Press Search\");\n    }\n\n    if (this.state.usersFound === 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, \"Nothing...\");\n    }\n\n    const userEle = this.state.users.map(usr => /*#__PURE__*/React.createElement(\"li\", {\n      key: usr.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }\n    }, usr.name, \" -- \", /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"star-rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 35\n      }\n    }, \"\\u2B50\\uFE0F\"), usr.rating, \" (\", usr.business, \")\"));\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }\n    }, userEle);\n  }\n\n  clearAllList() {\n    this.setState({\n      businesses: [],\n      businessesFound: -1,\n      users: [],\n      usersFound: -1\n    });\n  }\n\n  searchBusinesses() {\n    let category = document.getElementById(\"categorySearch\").value;\n    let alias = this.state.categoryObjects[category];\n    let addr = this.state.address;\n    console.log(\"attempting a search for: \" + alias + \" at address: \" + addr);\n    axios.get('/search/business', {\n      params: {\n        'category': alias,\n        'address': addr\n      }\n    }).then(response => {\n      console.log(\"/search is responding\");\n      console.log(response);\n      console.log(response.data.businesses);\n      this.setState({\n        businesses: response.data.businesses,\n        businessesFound: response.data.businesses.length\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  fullSearch() {\n    let category = document.getElementById(\"categorySearch\").value;\n    let alias = this.state.categoryObjects[category];\n    let addr = this.state.address;\n    console.log(\"attempting a search for: \" + alias + \" at address: \" + addr);\n    axios.get('/search/users', {\n      params: {\n        'category': alias,\n        'address': addr\n      }\n    }).then(response => {\n      console.log(\"/search is responding\");\n      console.log(response);\n      this.setState({\n        businesses: response.data.businesses,\n        businessesFound: response.data.businesses.length,\n        users: response.data.users,\n        usersFound: response.data.users.length\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"yelpSearchContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SearchForm, {\n      categories: this.state.categories,\n      address: this.state.address,\n      areaChange: () => this.areaChange(),\n      fullSearch: () => this.fullSearch(),\n      searchBusinesses: () => this.searchBusinesses(),\n      clearAll: () => this.clearAllLists(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      id: \"catListBtn\",\n      onClick: () => console.log(this.state.categoryObjects),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"Category List\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      className: \"listing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, \"Business Listing\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }, \"Results displayed: \", this.state.businessesFound))), /*#__PURE__*/React.createElement(Container, {\n      className: \"bizList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, this.renderBusinesses())), /*#__PURE__*/React.createElement(Container, {\n      className: \"listing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, \"Users Listing\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, \"Results displayed: \", this.state.usersFound))), /*#__PURE__*/React.createElement(Container, {\n      className: \"bizList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }, this.renderUsers())));\n  }\n\n}\n\nexport default YelpSearch;","map":{"version":3,"sources":["/usr/src/app/src/YelpSearch.js"],"names":["React","Component","Button","Container","Form","FormGroup","Label","Input","Row","Col","axios","LocationSearchInput","BusinessCard","SearchForm","PlacesAutocomplete","YelpSearch","constructor","props","state","categories","aliases","categoryObjects","address","businesses","businessesFound","users","usersFound","areaChange","bind","componentDidMount","get","then","response","console","log","categoryMap","data","setState","catch","error","evt","target","value","renderBusinesses","bizEle","map","biz","id","name","businessCardEle","renderUsers","userEle","usr","rating","business","clearAllList","searchBusinesses","category","document","getElementById","alias","addr","params","length","fullSearch","render","clearAllLists"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Button, Container, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport './App.css';\nimport axios from 'axios';\nimport LocationSearchInput from './LocationSearchInput';\nimport BusinessCard from './BusinessCard';\nimport SearchForm from './SearchForm';\nimport PlacesAutocomplete from 'react-places-autocomplete';\n\n\n\nclass YelpSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: [],\n            aliases: [],\n            categoryObjects: [],\n            address: '',\n            businesses: [],\n            businessesFound: -1,\n            users: [],\n            usersFound: -1\n        };\n        this.areaChange = this.areaChange.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('/categories/f')\n            .then(response => {\n                console.log(response);\n                let categoryMap = response.data[\"categoryMap\"][0];\n                this.setState({\n                    categories: response.data[\"categories\"],\n                    aliases: response.data[\"aliases\"],\n                    categoryObjects: categoryMap\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\t\n\tareaChange(evt) {\n        this.setState({address: evt.target.value});\n    }\n\t\n\trenderBusinesses() {\n        if(this.state.businessesFound < 0) {\n\t\t\treturn <span>Press Search</span>\n\t\t} \n\t\tif(this.state.businessesFound === 0) {\n\t\t\treturn <span>Nothing...</span>\n\t\t} \n\t\tconst bizEle = this.state.businesses.map((biz) => \n\t\t\t<li key={biz.id}>{biz.name}</li>\n        );\n        const businessCardEle = this.state.businesses.map((biz) => \n            <BusinessCard business={biz}/>\n        );\n\t\treturn <ul>{businessCardEle}</ul>\n    }\n    \n    renderUsers() {\n        if(this.state.usersFound < 0) {\n\t\t\treturn <span>Press Search</span>\n\t\t} \n        if(this.state.usersFound === 0) {\n\t\t\treturn <span>Nothing...</span>\n\t\t} \n\t\tconst userEle = this.state.users.map((usr) => \n\t\t\t<li key={usr.id}>{usr.name} -- <span role=\"img\" aria-label=\"star-rating\">⭐️</span>{usr.rating} ({usr.business})</li>\n\t\t);\n\t\treturn <ul>{userEle}</ul>\n    }\n\n    clearAllList() {\n        this.setState({\n            businesses: [],\n            businessesFound: -1,\n            users: [],\n            usersFound: -1\n        });    \n    }\n\n    searchBusinesses() {\n        let category = document.getElementById(\"categorySearch\").value;\n        let alias = this.state.categoryObjects[category];\n        let addr = this.state.address;\n        console.log(\"attempting a search for: \" + alias + \" at address: \" + addr);\n        axios.get('/search/business', \n            { \n                params: {\n                    'category': alias,\n                    'address': addr\n                }\n            }).then(response => {\n                console.log(\"/search is responding\");\n                console.log(response);\n                console.log(response.data.businesses)\n\t\t\t\tthis.setState({\n\t\t\t\t\tbusinesses: response.data.businesses,\n\t\t\t\t\tbusinessesFound: response.data.businesses.length\n\t\t\t\t});\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    fullSearch() {\n        let category = document.getElementById(\"categorySearch\").value;\n        let alias = this.state.categoryObjects[category];\n        let addr = this.state.address;\n        console.log(\"attempting a search for: \" + alias + \" at address: \" + addr);\n        axios.get('/search/users', \n            { \n                params: {\n                    'category': alias,\n                    'address': addr\n                }\n            }).then(response => {\n                console.log(\"/search is responding\");\n                console.log(response);\n\t\t\t\tthis.setState({\n\t\t\t\t\tbusinesses: response.data.businesses,\n                    businessesFound: response.data.businesses.length,\n                    users: response.data.users,\n                    usersFound: response.data.users.length\n\t\t\t\t});\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        return (\n            <Container className=\"yelpSearchContainer\">\n                <SearchForm \n                    categories = {this.state.categories}\n                    address = {this.state.address}\n                    areaChange = {() => this.areaChange()}\n                    fullSearch = {() => this.fullSearch()}\n                    searchBusinesses = {() => this.searchBusinesses()}\n                    clearAll = {() => this.clearAllLists()}\n                />\n                <Button id=\"catListBtn\" onClick={() => console.log(this.state.categoryObjects)}>Category List</Button>\n                <hr></hr>\n                <Container className=\"listing\">\n                    <Row>\n                        <Col>\n                            <h4>Business Listing</h4>\n                        </Col>\n                        <Col>\n                            <p>Results displayed: {this.state.businessesFound}</p>\n                        </Col>\n                    </Row>\n                    <Container className=\"bizList\">\n                        {this.renderBusinesses()}\n                    </Container>\n                </Container>\n                <Container className=\"listing\">\n                    <Row>\n                        <Col>\n                            <h4>Users Listing</h4>\n                        </Col>\n                        <Col>\n                            <p>Results displayed: {this.state.usersFound}</p>\n                        </Col>\n                    </Row>\n                    <Container className=\"bizList\">\n\t\t\t\t\t\t{this.renderUsers()}\n                    </Container>\n                </Container>\n            </Container>\n        );\n    }\n\n}\n\nexport default YelpSearch;"]},"metadata":{},"sourceType":"module"}