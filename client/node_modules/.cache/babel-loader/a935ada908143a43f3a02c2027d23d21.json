{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/YelpSearch.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Button, Container, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport './App.css';\nimport axios from 'axios';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport LocationSearchInput from './LocationSearchInput';\nimport BusinessListing from './BusinessListing';\nimport UsersListing from './UserListing';\nimport BusinessCard from './BusinessCard';\nimport SearchForm from './SearchForm';\n\nclass YelpSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchCategory: null,\n      categories: [],\n      aliases: [],\n      categoryObjects: [],\n      address: '',\n      businesses: [],\n      businessesFound: -1,\n      users: [],\n      usersFound: -1,\n      yab: false // true if searching for users\n\n    };\n    this.categoryChange = this.categoryChange.bind(this);\n    this.areaChange = this.areaChange.bind(this);\n    this.toggleYab = this.toggleYab.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('/categories/f').then(response => {\n      console.log(response);\n      let categoryMap = response.data[\"categoryMap\"][0];\n      this.setState({\n        categories: response.data[\"categories\"],\n        aliases: response.data[\"aliases\"],\n        categoryObjects: categoryMap\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  categoryChange(evt) {\n    console.log(\"changing category\");\n    console.log(evt.target);\n    this.setState({\n      searchCategory: evt.target.value\n    });\n  }\n\n  areaChange(evt) {\n    this.setState({\n      address: evt.target.value\n    });\n  }\n\n  renderBusinesses() {\n    if (this.state.businessesFound < 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"Press Search\");\n    }\n\n    if (this.state.businessesFound === 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, \"Nothing...\");\n    }\n\n    const bizEle = this.state.businesses.map(biz => /*#__PURE__*/React.createElement(\"li\", {\n      key: biz.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 4\n      }\n    }, biz.name));\n    const businessCardEle = this.state.businesses.map(biz => /*#__PURE__*/React.createElement(BusinessCard, {\n      business: biz,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }\n    }, businessCardEle);\n  }\n\n  renderUsers() {\n    if (this.state.usersFound < 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, \"Press Search\");\n    }\n\n    if (this.state.usersFound === 0) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, \"Nothing...\");\n    }\n\n    const userEle = this.state.users.map(usr => /*#__PURE__*/React.createElement(\"li\", {\n      key: usr.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }\n    }, usr.name, \" -- \", /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"star-rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 35\n      }\n    }, \"\\u2B50\\uFE0F\"), usr.rating, \" (\", usr.business, \")\"));\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }\n    }, userEle);\n  }\n\n  clearAllList() {\n    this.setState({\n      businesses: [],\n      businessesFound: -1,\n      users: [],\n      usersFound: -1\n    });\n  }\n\n  searchBusinesses() {\n    // let category = this.state.searchCategory;\n    let category = document.getElementById(\"categorySearch\").value;\n    let alias = this.state.categoryObjects[category];\n    let addr = this.state.address;\n    console.log(\"attempting a search for: \" + alias + \" at address: \" + addr);\n    axios.get('/search/business', {\n      params: {\n        'category': alias,\n        'address': addr\n      }\n    }).then(response => {\n      console.log(\"/search is responding\");\n      console.log(response);\n      console.log(response.data.businesses);\n      this.setState({\n        businesses: response.data.businesses,\n        businessesFound: response.data.businesses.length\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  fullSearch() {\n    let category = document.getElementById(\"categorySearch\").value;\n    let alias = this.state.categoryObjects[category];\n    let addr = this.state.address;\n    console.log(\"attempting a search for: \" + alias + \" at address: \" + addr);\n    axios.get('/search/users', {\n      params: {\n        'category': alias,\n        'address': addr\n      }\n    }).then(response => {\n      console.log(\"/search is responding\");\n      console.log(response);\n      this.setState({\n        businesses: response.data.businesses,\n        businessesFound: response.data.businesses.length,\n        users: response.data.users,\n        usersFound: response.data.users.length\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  toggleYab() {\n    this.setState({\n      yab: !this.state.yab\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"yelpSearchContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SearchForm, {\n      searchCategory: this.state.searchCategory,\n      categories: this.state.categories,\n      address: this.state.address,\n      yab: this.state.yab,\n      areaChange: () => this.areaChange(),\n      categoryChange: evt => this.categoryChange(evt),\n      fullSearch: () => this.fullSearch(),\n      searchBusinesses: () => this.searchBusinesses(),\n      clearAll: () => this.clearAllLists(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      color: \"secondary\",\n      id: \"catListBtn\",\n      className: \"adminBtn\",\n      onClick: () => console.log(this.state.categoryObjects),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, \"Category List\"), /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      color: \"secondary\",\n      id: \"yabSwitch\",\n      className: \"adminBtn\",\n      onClick: () => this.toggleYab(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \"Toggle yab\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BusinessListing, {\n      businessesFound: this.state.businessesFound,\n      renderBusinessess: () => this.renderBusinesses(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(UsersListing, {\n      yab: this.state.yab,\n      usersFound: this.state.usersFound,\n      renderUsers: () => this.renderUsers(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default YelpSearch;","map":{"version":3,"sources":["/usr/src/app/src/YelpSearch.js"],"names":["React","Component","Button","Container","Form","FormGroup","Label","Input","Row","Col","axios","PlacesAutocomplete","LocationSearchInput","BusinessListing","UsersListing","BusinessCard","SearchForm","YelpSearch","constructor","props","state","searchCategory","categories","aliases","categoryObjects","address","businesses","businessesFound","users","usersFound","yab","categoryChange","bind","areaChange","toggleYab","componentDidMount","get","then","response","console","log","categoryMap","data","setState","catch","error","evt","target","value","renderBusinesses","bizEle","map","biz","id","name","businessCardEle","renderUsers","userEle","usr","rating","business","clearAllList","searchBusinesses","category","document","getElementById","alias","addr","params","length","fullSearch","render","clearAllLists"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Button, Container, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport './App.css';\nimport axios from 'axios';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport LocationSearchInput from './LocationSearchInput';\nimport BusinessListing from './BusinessListing';\nimport UsersListing from './UserListing';\nimport BusinessCard from './BusinessCard';\nimport SearchForm from './SearchForm';\n\n\n\n\nclass YelpSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchCategory: null,\n            categories: [],\n            aliases: [],\n            categoryObjects: [],\n            address: '',\n            businesses: [],\n            businessesFound: -1,\n            users: [],\n            usersFound: -1,\n            yab: false,         // true if searching for users\n        };\n        this.categoryChange = this.categoryChange.bind(this);\n        this.areaChange = this.areaChange.bind(this);\n        this.toggleYab = this.toggleYab.bind(this);\n    }\n\n    componentDidMount() {\n      axios.get('/categories/f')\n        .then(response => {\n          console.log(response);\n          let categoryMap = response.data[\"categoryMap\"][0];\n          this.setState({\n              categories: response.data[\"categories\"],\n              aliases: response.data[\"aliases\"],\n              categoryObjects: categoryMap\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  \n  categoryChange(evt) {\n    console.log(\"changing category\");\n    console.log(evt.target);\n    this.setState({searchCategory: evt.target.value});\n  }  \n  \n\tareaChange(evt) {\n    this.setState({address: evt.target.value});\n  }\n\t\n\trenderBusinesses() {\n        if(this.state.businessesFound < 0) {\n\t\t\treturn <span>Press Search</span>\n\t\t} \n\t\tif(this.state.businessesFound === 0) {\n\t\t\treturn <span>Nothing...</span>\n\t\t} \n\t\tconst bizEle = this.state.businesses.map((biz) => \n\t\t\t<li key={biz.id}>{biz.name}</li>\n        );\n        const businessCardEle = this.state.businesses.map((biz) => \n            <BusinessCard business={biz}/>\n        );\n\t\treturn <ul>{businessCardEle}</ul>\n    }\n    \n    renderUsers() {\n        if(this.state.usersFound < 0) {\n\t\t\treturn <span>Press Search</span>\n\t\t} \n        if(this.state.usersFound === 0) {\n\t\t\treturn <span>Nothing...</span>\n\t\t} \n\t\tconst userEle = this.state.users.map((usr) => \n\t\t\t<li key={usr.id}>{usr.name} -- <span role=\"img\" aria-label=\"star-rating\">⭐️</span>{usr.rating} ({usr.business})</li>\n\t\t);\n\t\treturn <ul>{userEle}</ul>\n    }\n\n    clearAllList() {\n        this.setState({\n            businesses: [],\n            businessesFound: -1,\n            users: [],\n            usersFound: -1\n        });    \n    }\n\n    searchBusinesses() {\n      // let category = this.state.searchCategory;\n      let category = document.getElementById(\"categorySearch\").value;\n      let alias = this.state.categoryObjects[category];\n      let addr = this.state.address;\n      console.log(\"attempting a search for: \" + alias + \" at address: \" + addr);\n      axios.get('/search/business', \n          { \n              params: {\n                  'category': alias,\n                  'address': addr\n              }\n          }).then(response => {\n              console.log(\"/search is responding\");\n              console.log(response);\n              console.log(response.data.businesses)\n      this.setState({\n        businesses: response.data.businesses,\n        businessesFound: response.data.businesses.length\n      });\n          })\n          .catch(error => {\n              console.log(error);\n          });\n    }\n\n    fullSearch() {\n        let category = document.getElementById(\"categorySearch\").value;\n        let alias = this.state.categoryObjects[category];\n        let addr = this.state.address;\n        console.log(\"attempting a search for: \" + alias + \" at address: \" + addr);\n        axios.get('/search/users', \n            { \n                params: {\n                    'category': alias,\n                    'address': addr\n                }\n            }).then(response => {\n                console.log(\"/search is responding\");\n                console.log(response);\n\t\t\t\tthis.setState({\n\t\t\t\t\tbusinesses: response.data.businesses,\n                    businessesFound: response.data.businesses.length,\n                    users: response.data.users,\n                    usersFound: response.data.users.length\n\t\t\t\t});\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    toggleYab() {\n        this.setState({yab: !this.state.yab});\n    }\n\n    render() {\n        return (\n            <Container className=\"yelpSearchContainer\">\n                <SearchForm \n                  searchCategory = {this.state.searchCategory}\n                  categories = {this.state.categories}\n                  address = {this.state.address}\n                  yab = {this.state.yab}\n                  areaChange = {() => this.areaChange()}\n                  categoryChange = {(evt) => this.categoryChange(evt)}\n                  fullSearch = {() => this.fullSearch()}\n                  searchBusinesses = {() => this.searchBusinesses()}\n                  clearAll = {() => this.clearAllLists()}\n                />\n                <Button outline color=\"secondary\" id=\"catListBtn\" className=\"adminBtn\" onClick={() => console.log(this.state.categoryObjects)}>Category List</Button>\n                <Button outline color=\"secondary\" id=\"yabSwitch\" className=\"adminBtn\" onClick={() => this.toggleYab()}>Toggle yab</Button>\n                <hr></hr>\n                <BusinessListing \n                  businessesFound={this.state.businessesFound}\n                  renderBusinessess={() => this.renderBusinesses()}\n                />\n                <UsersListing\n                  yab={this.state.yab}\n                  usersFound={this.state.usersFound}\n                  renderUsers={() => this.renderUsers()}\n                />\n            </Container>\n        );\n    }\n\n}\n\nexport default YelpSearch;"]},"metadata":{},"sourceType":"module"}